{
    "apiVersion": "kyverno.io/v1",
    "kind": "Policy",
    "metadata": {
        "name": "<<policy_name>>",
        "namespace": "<<namespace>>",
        "annotations": {
            "policies.kyverno.io/title": "Restart <<policymutatekind>> On Secret Change",
            "policies.kyverno.io/category": "other",
            "policies.kyverno.io/severity": "medium",
            "policies.kyverno.io/subject": "<<policymutatekind>>",
            "kyverno.io/kyverno-version": "1.7.0",
            "policies.kyverno.io/minversion": "1.7.0",
            "kyverno.io/kubernetes-version": "1.23",
            "policies.kyverno.io/description": "If Secrets are mounted in ways which do not naturally allow updates to be live refreshed it may be necessary to modify a <<policymutatekind>>. This policy watches a Secret and if it changes will write an annotation to one or more target <<policymutatekind>>s thus triggering a new rollout and thereby refreshing the referred Secret. It may be necessary to grant additional privileges to the Kyverno ServiceAccount, via one of the existing ClusterRoleBindings or a new one, so it can modify <<policymutatekind>>s."
        }
    },
    "spec": {
        "mutateExistingOnPolicyUpdate": true,
        "rules": [
            {
                "name": "update-secret",
                "match": {
                    "any": [
                        {
                            "resources": {
                                "kinds": [
                                    "Secret"
                                ],
                                "names": [
                                    "<<policyanalyzekindname>>"
                                ]
                            }
                        }
                    ]
                },
                "preconditions": {
                    "all": [
                        {
                            "key": "{{request.operation}}",
                            "operator": "Equals",
                            "value": "UPDATE"
                        },
                        {
                            "key": "{{ equal_fold('{{request.object.data}}', '{{request.oldObject.data}}') }}",
                            "operator": "NotEquals",
                            "value": "true"
                        }
                    ]
                },
                "mutate": {
                    "targets": [
                        {
                            "apiVersion": "apps/v1",
                            "kind": "<<policymutatekind>>",
                            "name": "<<policymutatename>>",
                            "namespace": "<<namespace>>"
                        }
                    ],
                    "patchStrategicMerge": {
                        "spec": {
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "<<policymutatekind_lower>>-version": "{{request.object.metadata.resourceVersion}}"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        ]
    }
}